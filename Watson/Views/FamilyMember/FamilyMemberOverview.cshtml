@model List<Watson.Models.Family_Info>

@{
    ViewBag.Title = "FamilyMemberOverview";
}

<h2>Family Member Overview</h2>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Family Member Overview</title>
</head>
<body>
    @*Create a column for a dynmaic button using image mapping?? to call SpouseAndDependentOverview)*@
    <table class="table">
        <tr>
            <th>Insurance Overview</th>
            <th>FamilyMember_id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Relation To Employee</th>
            <th>Employee Number</th>
            <th>Employee Last Name</th>
        </tr>


        @foreach (var item in Model)
        {
        <tr>
            <td>
                <a href="#" onclick="Insurance()" class="next round">&#8250;</a>   @* Character map for Insurance(create a collaspible button for Life and Group Health to view onclick) *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FamilyMember_id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RelationshipToInsured)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.SSN)
            </td>
                <td>                   
                @Html.DisplayFor(modelItem => item.Employee.LastName)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditSpouse", "Family_Info", new { id = item.FamilyMember_id }) |
                @Html.ActionLink("Edit", "EditDependent", "Family_Info", new { id = item.FamilyMember_id }) |                   
                @Html.ActionLink("Detail", "SpouseDetail", "Family_Info", new { id = item.FamilyMember_id }) |
                @Html.ActionLink("Detail", "DependentDetail", "Family_Info", new { id = item.FamilyMember_id }) |
                @*@Html.ActionLink("Delete", "DeleteSpouse", "Family_Info", new { id = item.FamilyMember_id })
                @Html.ActionLink("Delete", "DeleteDependent", "Family_Info", new { id = item.FamilyMember_id })*@
            </td>
        </tr>
        }

        </table>
    <div>@*Have button display based on martial status (ie....if employee is single during employment and gets married at a later date and will need to add spouse to insurance plan)
             (or if they need to add dependent because they just had a baby*@
        <input type="button" onclick="SpouseEnrollment()" value="Add Spouse" class="btn btn-primary" />
        <input type="button" onclick="DependentEnrollemnt()" value="Add Dependent" class="btn btn-primary" />
    </div>
    </body>
</html>

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

    a:hover {
        background-color: #ddd;
        color: black;
    }

    .next {
        background-color: #2e4593;
        color: white;
    }

    .round {
        border-radius: 50%;
    }
</style>

