@{
    ViewBag.Title = "DeleteDep";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Delete</title>
</head>
<body>
    <div class="form-horizontal">
        <hr />
        <div class="collapsible" id="divDepDelete">Delete Dependent Information?</div>
        <div class="content" disabled>
            <p></p>
            <p></p>
            <h4>Dependent Info:</h4>
            <dl class="dl-horizontal">
                <dt>
                    <label class="col-md-offset-2 control-label">First Name:</label>
                </dt>
                <dd>
                    <input type="text" id="FirstName" class="form-control" name="FirstName" value="dep.FirstName">
                </dd>
                <dt>
                    <label class="col-md-offset-2 control-label">Last Name:</label>
                </dt>
                <dd>
                    <input type="text" id="LastName" class="form-control" name="LastName" value="dep.LastName">
                </dd>
                <dt>
                    <label class="col-md-offset-2 control-label">Date of Birth:</label>
                </dt>
                <dd>
                    <input type="date" id="DateOfBirth" class="form-control" name="DateOfBirth" value="dep.DateOfBirth">
                </dd>
                <dd>
                    @Convert.ToDateTime(Model.DateOfBirth).ToString("MM/dd/yyyy")
                </dd>
                <dt>
                    <label class="col-md-offset-2 control-label">Gender:</label>
                </dt>
                <dd>
                    <label class="radio-inline"><input disabled type="radio" id="Male" class="radio-inline" name="Gender" value="Male" @((Model.Gender == "Male") ? "checked" : "") />Male</label>
                    <label class="radio-inline"><input disabled type="radio" id="Female" class="radio-inline" name="Gender" value="Female" @((Model.Gender == "Female") ? "checked" : "") />Female</label>
                </dd>
            </dl>

            <h4>Insurance Info:</h4>
            <dl class="dl-horizontal">
                @foreach (var dep in Model.Other_Insurance)
                {
                    <dt>
                        <label class="col-md-offset-2 control-label">Insurance Company:</label>
                    </dt>
                    <dd>
                        <input type="text" id="InsuranceCompany" class="form-control" name="InsuranceCompany" value="dep.InsuranceCompany">
                    </dd>
                    <dt>
                        <label class="col-md-offset-2 control-label">Policy Number:</label>
                    </dt>
                    <dd>
                        <input type="number" id="PolicyNumber" class="form-control" name="PolicyNumber" value="dep.PolicyNumber">
                    </dd>
                    <dt>
                        <label class="col-md-offset-2 control-label">Phone Number:</label>
                    </dt>
                    <dd>
                        <input type="tel" id="PhoneNumber" class="form-control" name="PhoneNumber" value="dep.PhoneNumber">
                    </dd>
                    <dt>
                        <label class="col-md-offset-2 control-label">Mailing Address:</label>
                    </dt>
                    <dd>
                        <input type="text" id="InsMailingAddress" class="form-control" name="MailingAddress" value="dep.InsMailingAddress"  />
                        <input type="text" id="InsCity" class="form-control" name="City" value="dep.InsCity"  />
                        <input type="text" id="InsState" class="form-control" name="State" value="dep.InsState"/>
                        <input type="text" id="InsZipCode" class="form-control" name="ZipCode" value="dep.InsZipCode"/>
                    </dd>
                }
            </dl>
        </div>
    </div>
    <div class="form-actions no-color">
        <button type="submit" id="confirmDelete" value="Delete" class="btn" data-toggle="confirmation">Delete</button> |
        @Html.ActionLink("Back to List", "EmpOverview")
    </div>
</body>
</html>

<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }

    .phone-number .col-xs-3::after {
        content: "-";
        position: absolute;
        right: 5px;
        color: black;
        border: 0px solid;
        top: 8px;
    }

    .phone-number .col-xs-4 {
        width: 25%;
    }

    .phone-number .col-xs-3, .phone-number .col-xs-4 {
        padding-left: 0;
    }
</style>

<script>

    //add confirmDelte function and a prompt asking
    //if you are sure you want to delete this


    var col = document.querySelectorAll(".collapsible");
    var i;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }

        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#confirmDelete").addEventListener("click", function () {
            FirstName = document.getElementById("FirstName").value;
            LastName = document.getElementById("LastName").value;
            DateOfBirth = document.getElementById("DateOfBirth").value;

            Gender = document.querySelectorAll('input [name = "Gender"]').forEach(function (e, i) {
                if (e.checked) {
                    Gender = e.value;
                }
            });

            InsCompany = document.getElementById("InsCompany").value;
            PolicyNumber = document.getElementById("PolicyNumber").value;
            InsPhoneNumber = document.getElementById("InsPhoneNumber").value;
            InsMailingAddress = document.getElementById("InsMailingAddress").value;
            InsCity = document.getElementById("InsCity").value;
            InsState = document.getElementById("InsState").value;
            InsZipCode = document.getElementById("InsZipCode").value;

            var data = {
                "FirstName": FirstName,
                "LastName": LastName,
                "DateOfBirth": DateOfBirth,
                "Gender": Gender,
                "InsCompany": InsCompany,
                "PolicyNumber": PolicyNumber,
                "InsPhoneNumber": InsPhoneNumber,
                "InsMailingAddress": InsMailingAddress,
                "InsCity": InsCity,
                "InsState": InsState,
                "InsZipCode": InsZipCode,
            }

            var ret = postData('DeleteConfirm', data)
                .then(data => DeleteConfirm(data))
                .catch(error => console.error(error))
        })

        function DeleteConfirm(dep) {
            document.querySelector("FirstName").value = dep.FirstName;
            document.querySelector("LastName").value = dep.LastName;
            document.querySelector("DateOfBirth").value = dep.DateOfBirth;
            document.querySelector("Gender").value = dep.Gender;
            document.querySelector("InsCompany").value = dep.InsCompany;
            document.querySelector("PolicyNumber").value = dep.PolicyNumber;
            document.querySelector("InsPhoneNumber").value = dep.InsPhoneNumber;
            document.querySelector("InsMailingAddress").value = dep.InsMailingAddress;
            document.querySelector("InsCity").value = dep.InsCity;
            document.querySelector("InsState").value = dep.InsState;
            document.querySelector("InsZipCode").value = dep.InsZipCode;
        }

        function postData(url, data) {
            //Default options are marked with *
            return fetch(url, {
                body: JSON.stringify(data), //must match 'Content-Type' header
                cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', //include, same-origin, *omit
                headers: {
                    'user-agent': 'Mozilla/4.0 MDN Example',
                    'content-type': 'application/json'
                },
                method: 'Post', //*GET, POST, PUT, DELETE, etc...
                mode: 'cors', //no-cors, cors, *same-origin
                redirect: 'follow', //manual, *follow, error
                referrer: 'no-referrer', //*client, no-referrer
            })
                .then(Response => Response.json()) //parses response to JSON
        }
    })
</script>