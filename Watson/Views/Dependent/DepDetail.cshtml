@{
    ViewBag.Title = "DepDetail";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Dependent Detail</title>
</head>
<body>
    <div class="form-horizontal">
        <hr />
        <div class="collapsible" id="dependentSelectForm">Dependent Detail</div>
        <div class="content">
            <p></p>
            <p></p>
            <dl class="dl-horizontal">
                <dt>
                    <label class="col-md-2 control-label">Employee ID:</label>
                </dt>
                <dd id="Employee_id" value="Employee_id" class="col-md-10">
                    @Html.DisplayFor(model => model.Employee.Employee_id)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">FamilyMember ID:</label>
                </dt>
                <dd id="FamilyMember_id" value="FamilyMember_id" class="col-md-10">
                    @Html.DisplayFor(model => model.Family_Info.FamilyMember_id)
                </dd>
                <dt>
                <dt>
                    <label class="col-md-2 control-label">OtherInsurance ID:</label>
                </dt>
                <dd id="OtherInsurance_id" value="OtherInsurance_id" class="col-md-10">
                    @Html.DisplayFor(model => model.Other_Insurance.OtherInsurance_id)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Employee Number:</label>
                </dt>
                <dd id="EmpNumber" value="SSN" class="col-md-10">
                    @Html.DisplayFor(model => model.Employee.SSN)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Employee Name:</label>
                </dt>
                <dd id="EmpFirstName" value="FirstName" class="col-md-10">
                    @Html.DisplayFor(model => model.Employee.FirstName)
                </dd>
                <dd id="EmpLastName" value="LastName" class="col-md-10">
                    @Html.DisplayFor(model => model.Employee.LastName)
                </dd>
                <dt>
                    <label class="col-md-offset-2 control-label">Relationship to Employee:</label>
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.RelationshipToInsured)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">First Name:</label>
                </dt>
                <dd id="DepFirstName" value="FirstName" class="col-md-10">
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Last Name:</label>
                </dt>
                <dd id="DepLastName" value="LastName" class="col-md-10">
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Birth Date:</label>
                </dt>
                <dd id="DateOfBirth" value="DateOfBirth" class="col-md-10">
                    @Html.DisplayFor(model => model.DateOfBirth)
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Gender:</label>
                </dt>
                <dd class="col-md-10">
                    <label class="radio-inline"><input type="radio" id="Male" class="radio-inline" name="Gender" value="Male" @((Model.Gender == "Male") ? "checked" : "") disabled />Male</label>
                    <label class="radio-inline"><input type="radio" id="Female" class="radio-inline" name="Gender" value="Female" @((Model.Gender == "Female") ? "checked" : "") disabled />Female</label>
                </dd>
                <dd class="form-group" id="depOtherIns">
                    <label class="col-md-4 control-label">Is your dependent covered by other insurance, including Medicare/Medicaid? If so, we need the following information:</label>
                    <div class="form-group">
                        @foreach (var item in Model.Other_Insurance)
                        {
                            <label class="radio-inline"><input type="radio" id="YesOtherIns" class="radio-inline" @((Model.CoverByOtherInsurance == "Yes") ? "checked" : "") disabled onload="return CoveredByOtherIns()" name="CoveredByOtherInsurance" value="Yes" />Yes</label>
                            <label class="radio-inline"><input type="radio" id="NoOtherIns" class="radio-inline" @((Model.CoverByOtherInsurance == "No") ? "checked" : "") disabled onload="return CoveredByOtherIns()" name="CoveredByOtherInsurance" value="No" />No</label>
                        }
                    </div>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Insurance Information:</label>
                </dt>
                <dd id="divCoveredByOtherIns">
                    @foreach (var item in Model.Other_Insurance)
                    {
                        <label class="col-md-2 control-label">Insurance Company:</label>
                        <input type="text" id="InsCompany" class="form-control" name="InsuranceCompany" value="@Html.DisplayFor(model => item.InsuranceCompany)" />
                        <label class="col-md-2 control-label">Policy Number:</label>
                        <input type="text" id="PolicyNumber" class="form-control" name="PolicyNumber" value="@Html.DisplayFor(model => item.PolicyNumber)" />
                        <label class="col-md-2 control-label">Phone Number:</label>
                        <input type="text" id="InsPhoneNumber" class="form-control" name="PhoneNumber" value="@Html.DisplayFor(model => item.PhoneNumber)" />
                    }

                    <label class="col-md-2 control-label">Mailing Address:</label>
                    @foreach (var item in Model.Other_Insurance)
                    {
                        <input type="text" id="InsMailingAddress" class="form-control" name="MailingAddress" value="@Html.DisplayFor(model => item.MailingAddress)" disabled />
                        <input type="text" id="InsCity" class="form-control" name="City" value="@Html.DisplayFor(model => item.City)" disabled />
                        <input type="text" id="InsState" class="form-control" name="State" value="@Html.DisplayFor(model => item.State)" disabled />
                        <input type="text" id="InsZipCode" class="form-control" name="ZipCode" value="@Html.DisplayFor(model => item.ZipCode)" disabled />
                    }
                </dd>
            </dl>
        </div>
    </div>
    <p>
        @Html.ActionLink("Edit", "EditDep", new { id = Model.Employee_id }) |
        @Html.ActionLink("Back to List", "EmpOverview")
    </p>
</body>
</html>

<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .previous {
        background-color: #333;
        color: white;
    }

    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }
</style>

<script>
    var col = document.querySelectorAll(".collapsible");
    var i;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");

            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            }
            else {
                content.style.display = "block";
            }

        });
    }
</script>

<script>
    //function SpouseOrDependent() {
    //    var choice = document.getElementById("RelationToInsured")
    //    var dependent = document.getElementById("divDependentInfo")
    //    var spouse = document.getElementById("divSpouseInfo")
    //    if (choice.value == "Spouse")
    //    {
    //        spouse.style.display = 'block';
    //        dependent.style.display = 'none';
    //    }
    //    else
    //    {
    //        spouse.style.display = 'none';
    //        dependent.style.display = 'block';

    //    }
    //}

    function CoveredByOtherIns() {
        var div = document.getElementById("depOtherIns")
        var otherIns = document.getElementById('divCoveredByOtherIns')

        if (div.value == "Yes") {
            otherIns.style.display = 'block';
        }
        else (div.value == "No")
        {
            div.style.display = 'none';
        }
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#").addEventListener("click", function () {
            EmployeeID = document.getElementById("Employee_id").value;
            DependentID = document.getElementById("FamilyMember_id").value;
            OtherInsID = document.getElementById("OtherInsurance_id").value;
            EmpNumber = document.getElementById("SSN").value;
            EmpFirstName = document.getElementById("EmpFirstName").value;
            EmpLastName = document.getElementById("EmpLastName").value;
            DepFirstName = document.getElementById("DepFirstName").value;
            DepLastName = document.getElementById("DepLastName").value;
            DateOfBirth = document.getElementById("DateOfBirth").value;

            Gender = document.querySelectorAll('input [name = "Gender"]').forEach(function (e, i) {
                if (e.checked) {
                    Gender = e.value;
                }
            })

            RelationshipToInsured = document.querySelectorAll('input [name = "RelationshipToInsured"]').forEach(function (e, i) {
                if (e.checked) {
                    RelationshipToInsured = e.value;
                }
            })

            CoveredByOtherIns = document.getElementByName("CoveredByOtherIns").value;
            InsCompany = document.getElementById("InsCompany").value;
            PolicyNumber = document.getElementById("PolicyNumber").value;
            InsPhoneNumber = document.getElementById("InsPhoneNumber").value;
            InsMailingAddress = document.getElementById("InsMailingAddress").value;
            InsCity = document.getElementById("InsCity").value;
            InsState = document.getElementById("InsState").value;
            InsZipCode = document.getElementById("InsZipCode").value;
        })

        var data = {
            "Employee_id": EmployeeID,
            "FamilyMember_id": DependentID,
            "OtherInsurance_id": OtherInsID,
            "RelationshipToInsured": RelationshipToInsured,
            "EmpNumber": EmpNumber,
            "EmpFirstName": EmpFirstName,
            "EmpLastName": EmpLastName,
            "DepFirstName": DepFirstName,
            "DepLastName": DepLastName,
            "DateOfBirth": DateOfBirth,
            "Gender": Gender,
            "CoveredByOtherIns": CoveredByOtherIns,
            "InsCompany": InsCompany,
            "PolicyNumber": PolicyNumber,
            "InsMailingAddress": InsMailingAddress,
            "InsCity": InsCity,
            "InsState": InsState,
            "InsZipCode": InsZipCode,
        }

        var ret = postData('GetDepDetail', data)
            .then(data => SecondStep(data))
            .catch(error => console.error(error))

    })

    function SecondStep(id) {
        document.querySelector("#Employee_id").value = id;
        document.querySelector("#FamilyMember_id").value = id;
        document.querySelector("#OtherInsurance_id").value = id;
        document.querySelector("#dependentSelectForm").nextElementSibling.content.style.display = "none";
        document.querySelector("#SecondStep").nextElementSibling.content.style.display = "block";
    }

    function ThirdStep(id) {

    }

    function postData(url, data) {
        //Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        })
            .then(Response => Response.json()) //parses response to JSON
    }
</script>


