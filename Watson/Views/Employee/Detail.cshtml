@model Watson.Models.Employee


<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Employee Detail</title>
</head>
<body>
    @using (Html.BeginForm("Detail", "Employee", new { e_id = Model.Employee_id }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Employee_id, new { e_id = Model.Employee_id })
        <div class="form-horizontal">
            <hr />
            <div class="collapsible">Employee Detail</div>
            <div class="content">
                <p></p>
                <form class="disabled" action="Detail()" method="post">
                    <dl class="dl-horizontal">
                        <dt>
                            <label class="col-md-2 control-label">Current Employer:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.CurrentEmployer)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Employee Number:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.SSN)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Job Title:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.JobTitle)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">First Name:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.FirstName)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Last Name:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.LastName)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Date of Birth:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.DateOfBirth)
                            @*@Convert.ToDateTime(Model.DateOfBirth).ToString("MM/dd/yyyy")*@
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Gender:</label>
                        </dt>
                        <dd class="col-md-10">
                            <label class="radio-inline"><input disabled type="radio" id="Male" class="radio-inline" name="Gender" value="M" @((Model.Gender == "M") ? "checked" : "") />Male</label>
                            <label class="radio-inline"><input disabled type="radio" id="Female" class="radio-inline" name="Gender" value="F" @((Model.Gender == "F") ? "checked" : "") />Female</label>
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Marital Status:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.MaritalStatus)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Mailing Address:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.MailingAddress)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Physical Address:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.PhysicalAddress)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">City:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.City)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">State:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.State)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Zip Code:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.ZipCode)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">County:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.County)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Within City Limits?</label>
                        </dt>
                        <dd class="col-md-10">
                            <label class="radio-inline"><input disabled type="radio" id="YesCityLimits" class="radio-inline" name="CityLimits" value="true" @((Model.CityLimits == true) ? "checked" : "") />Yes</label>
                            <label class="radio-inline"><input disabled type="radio" id="NoCityLimits" class="radio-inline" name="CityLimits" value="false" @((Model.CityLimits == false) ? "checked" : "") />No</label>
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Email:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.EmailAddress)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Phone Number:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.PhoneNumber)
                        </dd>
                        <dt>
                            <label class="col-md-2 control-label">Cell Phone:</label>
                        </dt>
                        <dd class="col-md-10">
                            @Html.DisplayFor(model => model.CellPhone)
                        </dd>
                    </dl>
                </form>
            </div>
        </div>
    }
    <hr />
    <p>
        @Html.ActionLink("Edit", "Edit", new { controller = "Emplyoee" }, new { e_id = Model.Employee_id }) |
        @Html.ActionLink("Back to Overview", "EmployeeOverview")
    </p>
</body>
</html>

<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }
</style>

<script>
    //document.addEventListener("DOMContentloaded", function () {}
    var col = document.querySelectorAll(".collapsible");
    var i;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }

        });
    }
</script>

<script>
    function GetDetail() {

        e_id = document.getElementById("e_id").value;
        CurrentEmployer = document.getElementById("CurrentEmployer").value;
        JobTitle = document.getElementById("JobTitle").value;
        EmployeeNumber = document.getElementById("SSN").value;
        FirstName = document.getElementById("FirstName").value;
        LastName = document.getElementById("LastName").value;
        DateOfBirth = document.getElementById("DateOfBirth").value;
        Gender = document.getElementsByName("Gender").value;
        MaritalStatus = document.getElementsByName("MaritalStatus").value;
        MailingAddress = document.getElementsByName("MailingAddress").value;
        PhyscialAddress = document.getElementsByName("PhyscialAddress").value;
        City = document.getElementById("City").value;
        State = document.getElementById("State").value;
        ZipCode = document.getElementById("ZipCode").value;
        County = document.getElementById("County").value;
        CityLimits = document.getElementsByName("CityLimits").value;
        EmailAddress = document.getElementById("EmailAddress").value;
        PhoneNumber = document.getElementById("PhoneNumber").value;
        CellPhone = document.getElementById("CellPhone").value;

        var data = {

            "e_id": e_id,
            "CurrentEmployer": CurrentEmployer,
            "JobTitle": JobTitle,
            "EmployeeNumber": EmployeeNumber,
            "FirstName": FirstName,
            "LastName": LastName,
            "DateOfBirth": DateOfBirth,
            "Gender": Gender,
            "MaritalStatus": MaritalStatus,
            "MailingAddress": MailingAddress,
            "PhysicalAddress": PhyscialAddress,
            "City": City,
            "State": State,
            "ZipCode": ZipCode,
            "County": County,
            "CityLimits": CityLimits,
            "EmailAddress": EmailAddress,
            "PhoneNumber": PhoneNumber,
            "CellPhone": CellPhone,
        }

        var ret = postData('/Employee/Detail', data)
             .then(data => DetailUpdate(data))
            .catch(error => console.error(error)) 

        ret();
    }

    function postData(url, data) {
        //Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        })
            .then(Response => Response.json()) //parses response to JSON
    }
</script>