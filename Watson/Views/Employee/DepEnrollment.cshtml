@model Watson.Models.Family_Info
@{
    ViewBag.Title = "DepEnrollment";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Dependent Enrollment</title>
</head>
<body>
    <div class="form-horizontal">
        <hr />
        <input type="hidden" id="Employee_id" class="form-control" name="Employee_id" value="@ViewBag.Employee_id" />
        @*<input type="hidden" id="RelationshipToInsured" class="form-control" name="RelationshipToInsured" value="@ViewBag.RelationshipToInsured" />*@
        <div class="collapsible" id="FirstStep">Dependent Enrollment</div>
        <div class="content" id="dependentSelectForm">
            <p></p>
            <p></p>
            @* <div class="form-group" id="divRelationshipToInsured">
                <label for="RelationToInsured" class="col-md-2 control-label">Relation To Employee:</label>
                <div class="col-md-10">
                    <input type="text" id="RelationToInsured" class="form-control" name="RelationshipToInsured" value="@ViewBag.RelationshipToInsured" />
                </div>
                <div class="col-md-10">
            <select id="RelationToInsured" name="RelationshipToInsured" onchange="SpouseOrDependent()" class="form-control" disabled>
                @if (ViewBag.spouseExist == false)
                {
                    <option id="Spouse" name="RelationshipToInsured" value="Spouse" @((ViewBag.RelationshipToInsured.ToLower() == "Spouse") ? "selected" : "")>Spouse</option>
                }
                else
                {
                    <option id="Dependent" name="RelationshipToInsured" value="Dependent" @((ViewBag.RelationshipToInsured.ToLower() == "Dependent") ? "selected" : "")>Dependent</option>
                }
            </select>
        </div>*@
        </div>
            <div class="form-group">
                <label for="DepFirstName" class="col-md-2 control-label">First Name:</label>
                <div class="col-md-10">
                    <input type="text" id="DepFirstName" class="form-control" placeholder="First Name" name="FirstName" value="" />
                </div>
            </div>
            <div class="form-group">
                <label for="DepLastName" class="col-md-2 control-label">Last Name:</label>
                <div class="col-md-10">
                    <input type="text" id="DepLastName" class="form-control" placeholder="Last Name" name="LastName" value="" />
                </div>
            </div>
            <div class="form-group">
                <label for="DateOfBirth" class="col-md-2 control-label">Date of Birth:</label>
                <div class="col-md-10">
                    <input type="date" id="DateOfBirth" class="form-control" name="DateOfBirth" value="" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Gender:</label>
                <div class="col-md-10">
                    <select id="Gender" class="form-control">
                        <option value="">Select Option</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-10">
                    <button type="submit" id="DepEnrollmentUpdate" @*onclick="DependentEnrollmentUpdate()"*@ @*id="submit"*@ class="btn">Save</button>
                    <input type="submit" onclick="addInputSelection()" id="addDep" value="Add Dependent" class="btn">
                </div>
            </div>
        </div>
    </div>
    <p>
        @Html.ActionLink("Back to Family Overview", "FamilyOverview")
    </p>
</body>
</html>

<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

    .active, .collapsible:hover {
        background-color: #555;
    }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }
</style>

<script>
    var col = document.querySelectorAll(".collapsible");
    var i;
    var Employee_id;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }

    //function CoveredByOtherIns() {
    //    var div = document.getElementById("CoveredByOtherIns").checked
    //    div.style.visibility = (div.style.visibility == 'hidden') ? 'visible' : 'hidden';
    //}

    function HideCoveredByOtherIns() {
        document.getElementById("divCoveredByOtherIns").style.display = "none";
    }

    function ShowCoveredByOtherIns() {
        document.getElementById("divCoveredByOtherIns").style.display = "block";
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#DepEnrollmentUpdate").addEventListener("click", function () {
            Employee_id = document.getElementById("Employee_id").value;
            RelationshipToInsured = document.getElementById("RelationToInsured").value
            DepFirstName = document.getElementById("DepFirstName").value
            DepLastName = document.getElementById("DepLastName").value
            DateOfBirth = document.getElementById("DateOfBirth").value
            Gender = document.getElementById("Gender").value

            var data = {
                "Employee_id": Employee_id,
                "RelationshipToInsured": RelationshipToInsured,
                "DepFirstName": DepFirstName,
                "DepLastName": DepLastName,
                "DateOfBirth": DateOfBirth,
                "Gender": Gender,
            }

            var ret = postData('DepEnrollmentNew', data)
                .then(data => {
                    console.log(data);
                    FirstStep(data);
                })
                .catch(error => console.error(error))

        })
    })

    function FirstStep(dep) {
        document.querySelector("#FirstStep").nextElementSibling.style.display = "none";
        Employee_id = dep.data
    }

    function postData(url, data) {
        //Default options are marked with *
        console.log(data);
        console.log(JSON.stringify(data));
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'Accept': 'application/json',
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'same-origin', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        }).then(res => res.json())
            .then(response => console.log('Success:', JSON.stringify(response)))
            .catch(error => console.error('Error:', error));
        //.then(Response => {
        //    console.log(Response);
        //    Response.json();
        //}) //parses response to JSON
    }
</script>




