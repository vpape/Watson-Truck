@model Watson.Models.Family_Info
@{
    ViewBag.Title = "DepEnrollment";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Dependent Enrollment</title>
</head>
<body>
    <div class="form-horizontal">
        <div id="divDepEnrollment">
            <hr />
            <input type="hidden" id="Employee_id" class="form-control" name="Employee_id" value="@ViewBag.Employee_id" />
            <input type="hidden" id="FamilyMember_id" class="form-control" name="FamilyMember_id" value="@ViewBag.FamilyMember_id" />
            <input type="hidden" id="RelationshipToInsured" class="form-control" name="RelationshipToInsured" value="@ViewBag.RelationshipToInsured" />
            <div class="collapsible" id="FirstStep">Dependent Enrollment</div>
            <div class="content" id="dependentSelectForm">
                <p></p>
                <p></p>
                <div class="form-group" id="divRelationshipToInsured">
                    <label for="RelationshipToInsured" class="col-md-2 control-label">Relation To Employee:</label>
                    <div class="col-md-10">
                        <input type="text" id="RelationshipToInsured" class="form-control" name="RelationshipToInsured" value="@ViewBag.RelationshipToInsured" disabled />
                    </div>
                    @*<div class="col-md-10 col-md-offset-2">
                            <select id="RelationshipToInsured"  name="RelationshipToInsured" onchange="SpouseOrDependent()" class="form-control" disabled>
                                @if (ViewBag.spouseExist == false)
                                {
                                    <option id="Spouse"  name="RelationshipToInsured" value="Spouse" @((ViewBag.RelationshipToInsured.ToLower() == "Spouse") ? "selected" : "")>Spouse</option>
                                }
                                else
                                {
                                    <option id="Dependent" name="RelationshipToInsured" value="Dependent" @((ViewBag.RelationshipToInsured.ToLower() == "Dependent") ? "selected" : "")>Dependent</option>
                                }
                            </select>
                        </div>*@
                </div>
                <div class="form-group">
                    <label for="SSN" class="col-md-2 control-label">SSN:</label>
                    <div class="col-md-10">
                        <input type="text" id="DepSSN" class="form-control" placeholder="SSN" name="SSN" value="" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="DepFirstName" class="col-md-2 control-label">First Name:</label>
                    <div class="col-md-10">
                        <input type="text" id="DepFirstName" class="form-control" placeholder="First Name" name="FirstName" value="" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="DepLastName" class="col-md-2 control-label">Last Name:</label>
                    <div class="col-md-10">
                        <input type="text" id="DepLastName" class="form-control" placeholder="Last Name" name="LastName" value="" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="DateOfBirth" class="col-md-2 control-label">Date of Birth:</label>
                    <div class="col-md-10">
                        <input type="date" id="DateOfBirth" class="form-control" name="DateOfBirth" value="" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label">Gender:</label>
                    <div class="col-md-10">
                        <select id="Gender" class="form-control">
                            <option value="">Select Option</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-10">
                        <input type="submit" id="DepEnrollmentUpdate" value="Save" onclick="DependentEnrollmentUpdate()" class="btn" />
                        @*<button type="submit" id="DepEnrollmentUpdate" onclick="DependentEnrollmentUpdate()" class="btn">Save</button>*@
                        <button type="submit" onclick="addInputSelection()" id="addDep" class="btn">Add Dependent</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* Add Dep Insurance *@
    <div class="form-horizontal">
        <hr />
        <div class="collapsible" id="SecondStep">Dependent Insurance</div>
        <div id="divDepInsEnrollment" class="content">
            <p></p>
            <div id="DepOtherInsCoverage">
                <label>Is your dependent covered by other insurance, including Medicare/Medicaid?</label>
                <label class="radio-inline"><input type="radio" id="DepOtherIns" class="radio-inline" onclick="showHideDepInsCoverage()" name="CoveredByOtherInsurance" value="yes" />Yes</label>
                <label class="radio-inline"><input type="radio" id="DepOtherIns" class="radio-inline" onclick="showHideDepInsCoverage()" name="CoveredByOtherInsurance" value="no" />No</label>
                <div id="depInsInfo">
                    <div class="form-group col-md-2">
                        <input type="text" id="depInsCarrier" class="form-control" placeholder="Insurance Carrier" name="InsuranceCarrier" value="" />
                    </div>
                    <div class="form-group col-md-2">
                        <input type="text" id="depInsPolicyNumber" class="form-control" placeholder="Policy #" name="PolicyNumber" value="" />
                    </div>
                    <div class="form-group col-md-2">
                        <input type="tel" id="depInsPhoneNumber" class="form-control" placeholder="Phone #" name="PhoneNumber" size="3" maxlength="14" value="" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-10">
                    <button type="submit" id="DepInsEnrollmentUpdateStepTwo" class="btn">Save</button>
                    @*<button type="submit" id="DepEnrollmentUpdate" onclick="DependentEnrollmentUpdate()" class="btn">Save</button>*@
                    <button type="submit" onclick="AddInsurance()" id="addIns" class="btn">Add Insurance</button>
                </div>
            </div>
        </div>
    </div>
    @*<p>
            @Html.ActionLink("Back to Family Overview", "FamilyOverview", "Employee", new { Employee_id = ViewBag.Employee_id }, null)
        </p>*@
    <p>
        @Html.ActionLink("Back to Enrollment Selection", "EnrollmentSelection")
    </p>
</body>
</html>

<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

    .active, .collapsible:hover {
        background-color: #555;
    }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }
</style>

<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <script>
        var cnt = 1;
        /* This function recieves a name (string) and finds that element in the document, then removes it from it's parent node.
         * You have to use the removeChild method on the parent node of the object.
         */
        function removeElement(name) {
            var elementToRemove = document.getElementById(name);
            elementToRemove.parentNode.removeChild(elementToRemove);
        }

        function createElement(name, type) {
            var input = document.createElement("input");
            input.type = type;
            var newName = name + cnt;
            input.name = newName;
            input.id = newName;
            return input;
        }

        /* This function recieves a name (string) and attempts to find it in the document object.  it's going to increment the number at the end
         * of the name and create a new object, but only if that object doesn't already exist.
         * It adds three elements, a file input, a red X inside a span tag, and a break tag
         */
        function addInputSelection() {
            // skip the "fname" part of the name and grab the number that is the rest
            newID = ++cnt;
            //check to see if the next increment of that object already exists
            if (document.getElementById("fname" + newID) == null) {
                //get the form object so you have a reference to add child to for the three objects to create
                var formObj = document.getElementById("dependentSelectForm");
                // create the new input objects
                formObj.appendChild(createElement('fname', 'text'));
                formObj.appendChild(createElement('lname', 'text'));
                formObj.appendChild(createElement('dob', 'date'));

                //create the new span tag with the red X in it
                var spanObj = document.createElement("span");
                spanObj.id = "x" + newID;
                spanObj.style = "color:red";
                spanObj.addEventListener("click", function () {
                    removeInputSelection(this);
                })
                spanObj.innerHTML = "X";
                formObj.appendChild(spanObj);
                //create the break tag to make a new line.  have to add an id so we know which one to remove when they click the X
                var newBR = document.createElement("br");
                newBR.id = "br" + newID;
                with (document.getElementById('DepEnrollmentUpdate').style) {
                    top = (cnt * 25) + 80 + "px";
                }
                with (document.getElementById('adddep').style) {
                    top = (cnt * 25) + 80 + "px";
                }
                formObj.appendChild(newBR);

            }
        }
        /* This function removes the file, span, and br tags with the same number at the end
         */
        function removeInputSelection(o) {
            cnt--;
            var elementIdNumber = parseInt(o.id.substring(2, o.id.length - 1));

            removeElement("fname" + elementIdNumber);
            removeElement("lname" + elementIdNumber);
            removeElement("dob" + elementIdNumber);
            removeElement("x" + elementIdNumber);
            removeElement("br" + elementIdNumber);
            with (document.getElementById('DepEnrollmentUpdate').style) {
                top = (cnt * 25) + 80 + "px";
            }
            with (document.getElementById('adddep').style) {
                top = (cnt * 25) + 80 + "px";
            }
        }
    </script>
</head>
<body>
    @*<form id="dependentSelectForm" action="\Home\DependentPoster" method="post">
        <input type="text" name="fname1" id="fname1" />
        <input type="text" name="lname1" id="lname1" />
        <input type="date" name="dob1" id="dob1" />

        <span id="x1" style="color:red" onclick="removeInputSelection(this);">X</span>
        <br id="br1" />

        <input type="submit" value="Submit" id="DepEnrollmentUpdate" style="position:absolute;top:80px;" />
        <input type="button" onclick="addInputSelection();" value="Add Dependent" id="adddep" style="position:absolute;top:80px;left:160px">
    </form>*@
</body>
</html>

<script>
    var col = document.querySelectorAll(".collapsible");
    var i;
    var Employee_id;
    var FamilyMember_id;
    //var familyinfo_id;


    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }



    function AddInsurance() {
        
    }

    function showHideDepInsCoverage() {
        document.addEventListener("click", function () {
            var selection = document.getElementById("DepOtherIns");

            if (selection.checked == true) {

                document.getElementById("depInsInfo").style.visibility = "visible";
            }
            else {
                document.getElementById("depInsInfo").style.visibility = "hidden";
            }
        });
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#DepEnrollmentUpdate").addEventListener("click", function () {
            Employee_id = document.getElementById("Employee_id").value;
            RelationshipToInsured = document.getElementById("RelationToInsured").value
            DepSSN = document.getElementById("DepSSN").value
            DepFirstName = document.getElementById("DepFirstName").value
            DepLastName = document.getElementById("DepLastName").value
            DateOfBirth = document.getElementById("DateOfBirth").value
            Gender = document.getElementById("Gender").value

            var data = {
                "Employee_id": Employee_id,
                "FamilyMember_id": FamilyMember_id,
                "RelationshipToInsured": RelationshipToInsured,
                "DepSSN": DepSSN,
                "DepFirstName": DepFirstName,
                "DepLastName": DepLastName,
                "DateOfBirth": DateOfBirth,
                "Gender": Gender,
            }

            //var ret = postData('DepEnrollmentNew', data)
            //    .then(data => {
            //        console.log(data);
            //        FirstStep(data);
            //    })
            //    .catch(error => console.error(error))

            fetch('DepEnrollmentNew', {
                body: JSON.stringify(data), //must match 'Content-Type' header
                cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', //include, same-origin, *omit
                headers: {
                    'Accept': 'application/json',
                    'user-agent': 'Mozilla/4.0 MDN Example',
                    'content-type': 'application/json'
                },
                method: 'Post', //*GET, POST, PUT, DELETE, etc...
                mode: 'same-origin', //no-cors, cors, *same-origin
                redirect: 'follow', //manual, *follow, error
                referrer: 'no-referrer', //*client, no-referrer
            }).then(res => res.json())
                //.then(response => console.log('Success:', JSON.stringify(response)))
                .then(response => FirstStep(response))
                .catch(error => console.error('Error:', error));

        })

        document.querySelector("DepInsEnrollmentUpdateStepTwo").addEventListener("click", function () {


            var data = {
                "FamilyMember_id": FamilyMember_id,

            }

            //var ret = postData('DepInsEnrollment', data)
            //    .then(data => {
            //        console.log(data);
            //        SecondStep(data);
            //    })
            //    .catch(error => console.error(error))

            fetch('DepInsEnrollment', {
                body: JSON.stringify(data), //must match 'Content-Type' header
                cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', //include, same-origin, *omit
                headers: {
                    'Accept': 'application/json',
                    'user-agent': 'Mozilla/4.0 MDN Example',
                    'content-type': 'application/json'
                },
                method: 'Post', //*GET, POST, PUT, DELETE, etc...
                mode: 'same-origin', //no-cors, cors, *same-origin
                redirect: 'follow', //manual, *follow, error
                referrer: 'no-referrer', //*client, no-referrer
            }).then(res => res.json())
                .then(response => SecondStep(response))
                .catch(error => console.error('Error:', error));
        })      
    })

    function FirstStep(dep) {
        document.querySelector("#FirstStep").nextElementSibling.style.display = "none";
        console.log(dep);
        FamilyMember_id = dep.data;
    }

    function postData(url, data) {
        //Default options are marked with *
        console.log(data);
        console.log(JSON.stringify(data));
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'Accept': 'application/json',
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'same-origin', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        }).then(res => res.json())
            .then(response => console.log('Success:', JSON.stringify(response)))
            .catch(error => console.error('Error:', error));
        //.then(Response => {
        //    console.log(Response);
        //    Response.json();
        //}) //parses response to JSON
    }
</script>




