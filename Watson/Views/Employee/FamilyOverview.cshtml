@model List<Watson.Models.Family_Info>
@{
    ViewBag.Title = "FamilyOverview";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Family Overview</title>
</head>
<body>
    <h4>Family Overview</h4>
    <input type="hidden" id="Employee_id" class="form-control" name="Employee_id" value=@ViewBag.Employee_id />
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                @*Create a column for a dynmaic button using image mapping?? to call SpouseAndDependentOverview)*@
                <th>Insurance Overview</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Relation To Employee</th>
                <th>Employee Number</th>
                <th>Employee Last Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @* Dynamic button (image mapping??) to redirect to family overview *@
                        <a href="#" onclick="return FamilyInsurance()" class="next round"></a>
                    </td>
                    <td>
                        <input type="text" id="FirstName" class="form-control" name="FirstName" value="@Html.DisplayFor(model => item.FirstName)" readonly />
                    </td>
                    <td>
                        <input type="text" id="LastName" class="form-control" name="LastName" value="@Html.DisplayFor(model => item.FirstName)" readonly />
                    </td>
                    <td>
                        <input type="text" id="RelationshipToInsured" class="form-control" name="RelationshipToInsured" value="@Html.DisplayFor(model => item.FirstName)" readonly />
                    </td>
                    <td>
                        <input type="text" id="EmpNumber" class="form-control" name="SSN" value="@Html.DisplayFor(model => item.Employee.SSN)" readonly />
                    </td>
                    <td>
                        <input type="text" id="EmpLastName" class="form-control" name="LastName" value="@Html.DisplayFor(model => item.Employee.LastName)" readonly />
                    </td>
                    <td>
                        @Html.ActionLink("Edit Spouse", "EditSp", "Family_Info", new { FamilyMember_id = item.FamilyMember_id })  |
                        @Html.ActionLink("Edit Dependent", "EditDep", "Family_Info", new { FamilyMember_id = item.FamilyMember_id })  |
                        @Html.ActionLink("Spouse Detail", "SpDetail", "Family_Info", new { FamilyMember_id = item.FamilyMember_id })  |
                        @Html.ActionLink("Dependent Detail", "DepDetail", "Family_Info", new { FamilyMember_id = item.FamilyMember_id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="form-group">
        <div class="col-md-2">
            <button @*id="FamilyEnrollmentUpdate"*@ onclick="return FamilyEnrollment()" class="btn">Family Enrollment</button>
        </div>
    </div>
    <p>
        @Html.ActionLink("Back to Employee Overview", "EmpOverview")
    </p>
</body>
</html>


<style>
    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: underline;
        display: inline-flex;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

        table tr {
            border-bottom: 1px solid black;
        }

    .next {
        background-color: #333;
        padding-left: 1px;
    }

    .round {
        border-radius: 50%;
    }
</style>

<script>
    function FamilyInsurance() {

        location.href = "/Employee/FamilyInsurance";
    }

    function FamilyEnrollment() {

        location.href = "/Employee/FamilyEnrollment";
    }

    document.addEventListener("DOMContentLoaded", function () {
        EmpNumber = document.getElementById("FirstName").value;
        EmpFirstName = document.getElementById("LastName").value;
        EmpLastName = document.getElementById("RelationshipToInsured").value;
        MailingAddress = document.getElementById("EmpNumber").value;
        City = document.getElementById("EmpLastName").value;
        
        var data = {
            "Employee_id": Employee_id,
            "FirstName": FirstName,
            "LastName": LastName,
            "RelationToEmp": RelationshipToInsured,
            "EmpNumber": EmpNumber,
            "EmpLastName": EmpLastName,
        }

        var ret = postData('GetFamilyMember', data)
            .then(data => FirstStep(data))
            .catch(error => console.error(error))
    })

    function FirstStep(fam) {
        document.querySelector("#Employee_id").value = fam.Employee_id;
        document.querySelector("#FirstName").value = fam.FirstName;
        document.querySelector("#LastName").value = fam.LastName;
        document.querySelector("#RelationshipToInsured").value = fam.RelationshipToInsured;
        document.querySelector("#EmpNumber").value = fam.EmpNumber;
        document.querySelector("#EmpLastName").value = fam.EmpLastName;
    }

    function postData(url, data) {
        //Default options are marked with *
        console.log(data);
        console.log(JSON.stringify(data));
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        })
            .then(Response => {
                console.log(Response);
                Response.json();
            }) //parses response to JSON
    }
</script>




