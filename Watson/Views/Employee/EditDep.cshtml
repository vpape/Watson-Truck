@{
    ViewBag.Title = "EditDep";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Dependent Edit</title>
</head>
<body>
    <div class="form-horizontal">
        <hr />
        <input type="hidden" id="Employee_id" class="form-control" name="Employee_id" value=@ViewBag.Employee.Employee_id />
        @*<input type="hidden" id="FamilyMember_id" class="form-control" name="FamilyMember_id" value=@ViewBag.Family_Info.FamilyMember_id />
        <input type="hidden" id="OtherInsurance_id" class="form-control" name="OtherInsurance_id" value=@ViewBag.Other_Insurance_id.OtherInsurance_id />*@
        <div class="collapsible" id="FirstStep">Edit Dependent</div>
        <div class="content" id="dependentSelectForm">
            <p></p>
            <p></p>
            <div class="form-group">
                <label for="RelationToInsured" class="col-md-2 control-label">Relationship to Employee:</label>
                <div class="col-md-10">
                    <select id="RelationToInsured" name="RelationshipToInsured" @*onchange=" return SpouseOrDependent()"*@ class="form-control" disabled>
                        @if (ViewBag.spouseExist == false)
                        {
                            <option id="Spouse" name="RelationshipToInsured" value="Spouse" @((ViewBag.Family_Info.RelationshipToInsured.ToLower() == "Spouse") ? "selected" : "")>Spouse</option>
                        }
                        else
                        {
                            <option id="Dependent" name="RelationshipToInsured" value="Dependent" @((ViewBag.Family_Info.RelationshipToInsured.ToLower() == "Dependent") ? "selected" : "")>Dependent</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label for="EmpNumber" class="col-md-2 control-label">Employee Number:</label>
                <div class="col-md-10">
                    <input type="text" id="EmpNumber" class="form-control" name="SSN" value="@ViewBag.Employee.SSN" />
                </div>
            </div>
            <div class="form-group">
                <label for="FirstName" class="col-md-2 control-label">First Name:</label>
                <div class="col-md-10">
                    <input type="text" id="FirstName" class="form-control" name="FirstName" value="@ViewBag.Family_Info.FirstName" />
                </div>
            </div>
            <div class="form-group">
                <label for="LastName" class="col-md-2 control-label">Last Name:</label>
                <div class="col-md-10">
                    <input type="text" id="LastName" class="form-control" name="LastName" value="@ViewBag.Family_Info.LastName" />
                </div>
            </div>
            <div class="form-group">
                <label for="DateOfBirth" class="col-md-2 control-label">Date of Birth:</label>
                <div class="col-md-10">
                    <input type="text" id="DateOfBirth" class="form-control" name="DateOfBirth" value="@(((DateTime)ViewBag.Family_Info.DateOfBirth.Date).ToString("yyyy-MM-dd"))" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Gender:</label>
                <select id="Gender" class="col-md-10">
                    <option value="@(ViewBag.Family_Info.Gender == "Male"   ? "selected" : "")">Male</option>
                    <option value="@(ViewBag.Family_Info.Gender == "Female" ? "selected" : "")">Female</option>
                </select>
            </div>
            <h2>Insurance Information</h2>
            <div class="form-group" id="depOtherIns">
                <label>Is your dependent covered by other insurance, including Medicare/Medicaid? If so, we need the following information:</label>
                <div class="form-group" id="CoveredByOtherIns">
                    @*@foreach (var dep in Model.Other_Insurance)
                    {*@
                        <label class="radio-inline">
                            <input type="radio" id="YesOtherIns" class="radio-inline" @*onclick="CoveredByOtherIns()"*@ name="CoveredByOtherInsurance" value="Yes" @((ViewBag.Family_Info.CoveredByOtherInsurance == "Yes") ? "checked" : "") />Yes
                        </label>
                        <label class="radio-inline">
                            <input type="radio" id="NoOtherIns" class="radio-inline" @*onclick="CoveredByOtherIns()"*@ name="CoveredByOtherInsurance" value="No"   @((ViewBag.Family_Info.CoveredByOtherInsurance == "No")  ? "checked" : "") />No
                        </label>
                    @*}*@
                </div>
                <div class="form-group" id="divCoveredByOtherIns">
                    @*@foreach (var dep in Model.Other_Insurance)
                    {*@
                        <div class="form-group">
                            <label for="InsCarrier">Insurance Company:</label>
                            <div class="col-md-10">
                                <input type="text" id="InsuranceCompany" class="form-control" name="InsuranceCompany" value="@ViewBag.Other_Insurance.InsuranceCompany" />
                            </div>
                            <label for="PolicyNumber" id="divPolicyNumber">Policy Number:</label>
                            <div class="col-md-10">
                                <input type="text" id="PolicyNumber" class="form-control" name="PolicyNumber" value="@ViewBag.Other_Insurance.PolicyNumber" />
                            </div>
                            <label for="InsPhoneNumber" id="divPhoneNumber">Phone Number:</label>
                            <div class="col-md-10">
                                <input type="text" id="InsPhoneNumber" class="form-control" name="PhoneNumber" value="@ViewBag.Other_Insurance.PhoneNumber" />
                            </div>
                            <label for="InsMailingAddress" id="divInsMailingAddress">Mailing Address:</label>
                            <div class="col-md-10">
                                <input type="text" id="InsMailingAddress" class="form-control" name="MailingAddress" value="@ViewBag.Other_Insurance.MailingAddress" />
                                <input type="text" id="InsPObox" class="form-control" placeholder="PO Box" name="PObox" value="@ViewBag.Other_Insurance.PObox" />
                                <input type="text" id="InsCity" class="form-control" name="City" value="@ViewBag.Other_Insurance.City" />
                                <input type="text" id="InsState" class="form-control" name="State" value="@ViewBag.Other_Insurance.State" />
                                <input type="text" id="InsZipCode" class="form-control" name="ZipCode" value="@ViewBag.Other_Insurance.ZipCode" />
                            </div>
                        </div>
                    @*}*@
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" id="EditDepEnrollmentUpdate" @*onclick="DependentEnrollmentUpdate()"*@ @*id="submit"*@ class="btn">Save</button>
                        <input type="submit" onclick="addInputSelection()" id="addDep" value="Add Dependent" class="btn">
                    </div>
                </div>
            </div>

        </div>
    </div>

    }
    <p>
        @Html.ActionLink("Back to List", "EmpOverview")
    </p>
</body>
</html>

<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .hide {
        display: none;
    }

    .previous {
        background-color: #333;
        color: white;
    }

    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }

    .phone-number .col-xs-3::after {
        content: "-";
        position: absolute;
        right: 5px;
        color: black;
        border: 0px solid;
        top: 8px;
    }

    .phone-number .col-xs-4 {
        width: 25%;
    }

    .phone-number .col-xs-3, .phone-number .col-xs-4 {
        padding-left: 0;
    }
</style>

<script>
    var col = document.querySelectorAll(".collapsible");
    var i;
    var Employee_id;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");

            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            }
            else {
                content.style.display = "block";
            }

        });
    }
</script>

<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <script>
        var cnt = 1;
        /* This function recieves a name (string) and finds that element in the document, then removes it from it's parent node.
         * You have to use the removeChild method on the parent node of the object.
         */
        function removeElement(name) {
            var elementToRemove = document.getElementById(name);
            elementToRemove.parentNode.removeChild(elementToRemove);
        }

        function createElement(name, type) {
            var input = document.createElement("input");
            input.type = type;
            var newName = name + cnt;
            input.name = newName;
            input.id = newName;
            return input;
        }

        /* This function recieves a name (string) and attempts to find it in the document object.  it's going to increment the number at the end
         * of the name and create a new object, but only if that object doesn't already exist.
         * It adds three elements, a file input, a red X inside a span tag, and a break tag
         */
        function addInputSelection() {
            // skip the "fname" part of the name and grab the number that is the rest
            newID = ++cnt;
            //check to see if the next increment of that object already exists
            if (document.getElementById("fname" + newID) == null) {
                //get the form object so you have a reference to add child to for the three objects to create
                var formObj = document.getElementById("dependentSelectForm");
                // create the new input objects
                formObj.appendChild(createElement('fname', 'text'));
                formObj.appendChild(createElement('lname', 'text'));
                formObj.appendChild(createElement('dob', 'date'));

                //create the new span tag with the red X in it
                var spanObj = document.createElement("span");
                spanObj.id = "x" + newID;
                spanObj.style = "color:red";
                spanObj.addEventListener("click", function () {
                    removeInputSelection(this);
                })
                spanObj.innerHTML = "X";
                formObj.appendChild(spanObj);
                //create the break tag to make a new line.  have to add an id so we know which one to remove when they click the X
                var newBR = document.createElement("br");
                newBR.id = "br" + newID;
                with (document.getElementById('EditDepEnrollmentUpdate').style) {
                    top = (cnt * 25) + 80 + "px";
                }
                with (document.getElementById('adddep').style) {
                    top = (cnt * 25) + 80 + "px";
                }
                formObj.appendChild(newBR);

            }
        }
        /* This function removes the file, span, and br tags with the same number at the end
         */
        function removeInputSelection(o) {
            cnt--;
            var elementIdNumber = parseInt(o.id.substring(2, o.id.length - 1));

            removeElement("fname" + elementIdNumber);
            removeElement("lname" + elementIdNumber);
            removeElement("dob" + elementIdNumber);
            removeElement("x" + elementIdNumber);
            removeElement("br" + elementIdNumber);
            with (document.getElementById('EditDepEnrollmentUpdate').style) {
                top = (cnt * 25) + 80 + "px";
            }
            with (document.getElementById('adddep').style) {
                top = (cnt * 25) + 80 + "px";
            }
        }
    </script>
</head>
<body>
    <form id="dependentSelectForm" action="\Home\DependentPoster" method="post">
        <input type="text" name="fname1" id="fname1" />
        <input type="text" name="lname1" id="lname1" />
        <input type="date" name="dob1" id="dob1" />

        <span id="x1" style="color:red" onclick="removeInputSelection(this);">X</span>
        <br id="br1" />

        <input type="submit" value="Submit" id="DepEnrollmentUpdate" @*id="submit"*@ style="position:absolute;top:80px;" />
        <input type="button" onclick="addInputSelection();" value="Add Dependent" id="adddep" style="position:absolute;top:80px;left:160px">
    </form>
</body>
</html>

<script>
    //function SpouseOrDependent() {
    //    var choice = document.getElementById("RelationToInsured")
    //    var dependent = document.getElementById("divDependentInfo")
    //    var spouse = document.getElementById("divSpouseInfo")
    //    if (choice.value == "Spouse")
    //    {
    //        spouse.style.display = 'block';
    //        dependent.style.display = 'none';
    //    }
    //    else
    //    {
    //        spouse.style.display = 'none';
    //        dependent.style.display = 'block';

    //    }
    //}

    //function CoveredByOtherIns() {
    //    if (document.getElementById("CoveredByOther").checked) {
    //        var input = document.createElement("input");
    //        input.type = "text";
    //        input.id = "YesCoveredByOtherIns";
    //        document.getElementById("CoveredByOther")

    //    }
    //}

    //function CoveredByOtherIns() {
    //    var div = document.getElementById("divCoveredByOther").checked
    //    div.style.visibility = (div.style.visibility == 'hidden') ? 'visible' : 'hidden';
    //}

    function CoveredByOtherIns() {
        var div = document.getElementById("depOtherIns")
        var otherIns = document.getElementById('divCoveredByOtherIns')

        if (div.value == "Yes") {
            otherIns.style.display = 'block';
        }
        else (div.value == "No")
        {
            div.style.display = 'none';
        }
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#EditDepEnrollmentUpdate").addEventListener("click", function () {
            Employee_id = document.getElementById("Employee_id").value
            EmpNumber = document.getElementById("EmpNumber").value
            RelationshipToInsured = document.getElementByName("RelationshipToInsured").value
            DepFirstName = document.getElementById("DepFirstName").value
            DepLastName = document.getElementById("DepLastName").value
            DateOfBirth = document.getElementById("DateOfBirth").value
            Gender = document.getElementById("Gender").value
            CoveredByOtherIns = document.getElementByName("CoveredByOtherIns").value

            InsuranceCompany = document.getElementById("InsuranceCompany").value
            PolicyNumber = document.getElementById("PolicyNumber").value
            InsPhoneNumber = document.getElementById("InsPhoneNumber").value
            InsMailingAddress = document.getElementById("InsMailingAddress").value
            InsCity = document.getElementById("InsCity").value
            InsState = document.getElementById("InsState").value
            InsZipCode = document.getElementById("InsZipCode").value

            var data = {
                "Employee_id": Employee_id,
                "EmpNumber": EmpNumber,
                "RelationshipToInsured": RelationshipToInsured,
                "DepFirstName": DepFirstName,
                "DepLastName": DepLastName,
                "DateOfBirth": DateOfBirth,
                "Gender": Gender,
                "CoveredByOtherIns": CoveredByOtherIns,
                "InsuranceCompany": InsuranceCompany,
                "PolicyNumber": PolicyNumber,
                "InsMailingAddress": InsMailingAddress,
                "InsCity": InsCity,
                "InsState": InsState,
                "InsZipCode": InsZipCode,
            }

            var ret = postData('DepEditUpdate', data)
                .then(data => FirstStep(data))
                .catch(error => console.error(error))
        })
    })

    function FirstStep(dep) {
        document.querySelector("#FirstStep").nextElementSibling.style.display = "block";
        document.querySelector("#Employee_id").value = dep.Employee_id;
        document.querySelector("#EmpNumber").value = dep.EmpNumber;
        document.querySelector("#RelationshipToInsured").value = dep.RelationshipToInsured;
        document.querySelector("#DepFirstName").value = dep.DepFirstName;
        document.querySelector("#DepLastName").value = dep.DepLastName;
        document.querySelector("#DateOfBirth").value = dep.DateOfBirth;
        document.querySelector("#Gender").value = dep.Gender;
        document.querySelector("#CoveredByOtherIns").value = dep.CoveredByOtherIns;
        document.querySelector("#InsuranceCompany").value = dep.InsuranceCompany;
        document.querySelector("#PolicyNumber").value = dep.PolicyNumber;
        document.querySelector("#InsMailingAddress").value = dep.InsMailingAddress;
        document.querySelector("#InsCity").value = dep.InsCity;
        document.querySelector("#InsState").value = dep.InsState;
        document.querySelector("#InsZipCode").value = dep.InsZipCode;
        Employee_id = dep.data;
    }

    function postData(url, data) {
        //Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        })
            .then(Response => Response.json()) //parses response to JSON
    }
</script>


