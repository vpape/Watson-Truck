@model Watson.Models.Employee


@*@{
    @ViewBag.Title = "Edit";
}*@

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit Employee</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @*@Html.HiddenFor(model => model.Employee_id, new { e_id = Model.Employee_id})*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            <hr />
            <button class="collapsible"><h4>Edit Employee</h4></button>
            <div class="content">
                <form action="Edit()" method="post">
                    <div class="form-group">
                        <label for="CurrentEmployer" class="col-md-2 control-label">Current Employer:</label>
                        <div class="col-md-10">
                            <input type="text" id="CurrentEmployer" class="form-control" name="CurrentEmployer" value="@Html.DisplayFor(model => model.CurrentEmployer)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="SSN" class="col-md-2 control-label">Employee Number:</label>
                        <div class="col-md-10">
                            <input type="text" id="SSN" class="form-control" name="SSN" value="@Html.DisplayFor(model => model.SSN)" />
                        </div>
                    </div>
                      <div class="form-group">
                        <label for="JobTitle" class="col-md-2 control-label">Job Title:</label>
                        <div class="col-md-10">
                            <input type="text" id="JobTitle" class="form-control" name="JobTitle" value="@Html.DisplayFor(model => model.JobTitle)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="FirstName" class="col-md-2 control-label">First Name:</label>
                        <div class="col-md-10">
                            <input type="text" id="FirstName" class="form-control" name="FirstName" value="@Html.DisplayFor(model => model.FirstName)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="LastName" class="col-md-2 control-label">Last Name:</label>
                        <div class="col-md-10">
                            <input type="text" id="LastName" class="form-control" name="LastName" value="@Html.DisplayFor(model => model.LastName)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="DateOfBirth" class="col-md-2 control-label">Date of Birth:</label>
                        <div class="col-md-10">
                            <input type="text" id="DateOfBirth" class="form-control" name="DateOfBirth" value="@Html.DisplayFor(model => model.DateOfBirth)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label">Gender:</label>
                        <div class="col-md-10">
                            <label class="radio-inline"><input type="radio" id="Male" class="radio-inline" name="Gender" value="true" @((Model.Gender == "Male") ? "checked" : "") />Male</label>
                            <label class="radio-inline"><input type="radio" id="Female" class="radio-inline" name="Gender" value="false" @((Model.Gender == "Female") ? "checked" : "") />Female</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="MaritalStatus" class="col-md-2 control-label">Marital Status</label>
                        <div class="col-md-10">
                            <select name="MaritalStatus" class="form-control">
                                <option id="MarriedwDep" value="@Html.DisplayFor(model => model.MaritalStatus)">Married with Dependents</option>
                                <option id="Married"     value="@Html.DisplayFor(model => model.MaritalStatus)">Married</option>
                                <option id="SinglewDep"  value="@Html.DisplayFor(model => model.MaritalStatus)">Single with Dependents</option>
                                <option id="Single"      value="@Html.DisplayFor(model => model.MaritalStatus)">Single</option>
                            </select>
                        </div>
                    </div>
                    <div id="divEmpContact">
                        <div class="form-group">
                            <label for="MailingAddress" class="col-md-2 control-label">Mailing Address:</label>
                            <div class="col-md-10">
                                <input type="text" id="MailingAddress" class="form-control" name="MailingAddress" value="@Html.DisplayFor(model => model.MailingAddress)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="PhysicalAddress" class="col-md-2 control-label">Physical Address:</label>
                            <div class="col-md-10">
                                <input type="text" id="PhysicalAddress" class="form-control" name="PhysicalAddress" value="@Html.DisplayFor(model => model.PhysicalAddress)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="City" class="col-md-2 control-label">City:</label>
                            <div class="col-md-10">
                                <input type="text" id="City" class="form-control" name="City" value="@Html.DisplayFor(model => model.City)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="State" class="col-md-2 control-label">State:</label>
                            <div class="col-md-10">
                                <input type="text" id="State" class="form-control" name="State" value="@Html.DisplayFor(model => model.State)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="ZipCode" class="col-md-2 control-label">Zip Code:</label>
                            <div class="col-md-10">
                                <input type="text" id="ZipCode" class="form-control" name="ZipCode" value="@Html.DisplayFor(model => model.ZipCode)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="County" class="col-md-2 control-label">County:</label>
                            <div class="col-md-10">
                                <input type="text" id="County" class="form-control" name="County" value="@Html.DisplayFor(model => model.County)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="CityLimits" class="col-md-2 control-label">Within City Limits?</label>
                            <div class="col-md-10">
                                <label class="radio-inline"><input type="radio" id="YesCityLimits" class="radio-inline" name="CityLimits" value="true" @((Model.CityLimits == true) ? "checked" : "") checked />Yes</label>
                                <label class="radio-inline"><input type="radio" id="NoCityLimits" class="radio-inline" name="CityLimits" value="false" @((Model.CityLimits == false) ? "checked" : "") />No</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EmailAddress" class="col-md-2 control-label">Email:</label>
                            <div class="col-md-10">
                                <input type="text" id="EmailAddress" class="form-control" name="EmailAddress" value="@Html.DisplayFor(model => model.EmailAddress)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="PhoneNumber" class="col-md-2 control-label">Phone Number:</label>
                            <div class="col-md-10">
                                <input type="text" id="PhoneNumber" class="form-control" name="PhoneNumber" value="@Html.DisplayFor(model => model.PhoneNumber)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="CellPhone" class="col-md-2 control-label">Cell Phone:</label>
                            <div class="col-md-10">
                                <input type="text" id="CellPhone" class="form-control" name="CellPhone" value="@Html.DisplayFor(model => model.CellPhone)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="Submit" type="submit"  onclick="EmployeeEditUpdate()" value="Save" class="btn" />
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

    }
    <p>
        @Html.ActionLink("Back to HomePage", "EmployeeOverview")
    </p>
</body>
</html>

<script>
    document.addEventListener("DOMContentloaded", function () {

        var col = document.querySelectorAll(".collapsible");

        for (var i = 0; i < col.length; i++) {
            col[i].addEventListener("click", function () {
                this.classList.toggle("active");

                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                }
                else {
                    content.style.display = "block";
                }

            });
        }
    })

</script>

<style>
    .collapsible {
        background-color: #333333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

    .active, .collapsible:hover {
        background-color: #555;
    }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

    a:hover {
        background-color: #ddd;
        color: black;
    }

    .previous {
        background-color: #2e4593;
        color: black;
    }

    .btn {
        background-color: #2e4593;
        color: white;
    }
</style>

<script>
    function GetEmployeeEdit() {
        CurrentEmployer = document.getElementById("CurrentEmployer").value;
        JobTitle = document.getElementById("JobTitle").value;
        EmployeeNumber = document.getElementById("SSN").value;
        FirstName = document.getElementById("FirstName").value;
        LastName = document.getElementById("LastName").value;
        DateOfBirth = document.getElementById("DateOfBirth").value;
        Gender = document.getElementsByName("Gender").value;
        MaritalStatus = document.getElementsByName("MaritalStatus").value;

        MailingAddress = document.getElementsByName("MailingAddress").value;
        PhyscialAddress = document.getElementsByName("PhyscialAddress").value;
        City = document.getElementById("City").value;
        State = document.getElementById("State").value;
        ZipCode = document.getElementById("ZipCode").value;
        County = document.getElementById("County").value;
        CityLimits = document.getElementsByName("CityLimits").value;
        Email = document.getElementById("EmailAddress").value;
        PhoneNumber = document.getElementById("PhoneNumber").value;
        CellPhone = document.getElementById("CellPhone").value;

        postData('/Employee/Edit', {
            CurrentEmployer: CurrentEmployer, JobTitle: JobTitle, EmployeeNumber: EmployeeNumber, FirstName: FirstName,
            LastName: LastName, DateOfBirth: DateOfBirth, Gender: Gender, MaritalStatus: MaritalStatus,
            MailingAddress: MailingAddress, PhyscialAddress: PhyscialAddress, City: City, State: State,
            ZipCode: ZipCode, CityLimits: CityLimits, Email: Email, PhoneNumber: PhoneNumber, CellPhone: CellPhone
        })
            .then(data => EmployeeEditUpdate(data))
            .catch(error => console.error(error))
    }

    function postData(url, data) {
        //Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        })
            .then(Response => Response.json()) //parses response to JSON
    }
</script>

@*<body> EXAMPLE
        This is a post.  It will actually take you to another page<br />
        <div>
            <form method="post" action="/postUser">
                <label for="firstname">First Name: </label><input type="text" name="firstname" /><br />
                <label for="lastname">Last Name: </label><input type="text" name="lastname" /><br />
                <label for="age">Age: </label><input type="number" name="age" /><br />
                <input type="submit" /><br />
            </form>
        </div>
        <div>
            This is not a post.  This uses Javascript to post the data behind the scenes<br />
            <label for="fname">First Name: </label><input type="text" name="fname" id="fname" /><br />
            <label for="lname">Last Name: </label><input type="text" name="lname" id="lname" /><br />
            <label for="a">Age: </label><input type="number" name="a" id="a" /><br />
            <button onclick="submitUser();">Submit</button><br />
        </div>
    </body>*@