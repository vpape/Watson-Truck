@{
    ViewBag.Title = "EmpOverview";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"></script>
    <title>Employee Overview</title>
</head>
<body>
    <div class="container">
        <h3>Enrollment Overview</h3>
        <div id="divEmpOverview">
            <table class="table">
                <tr>
                    @*Create a column for a dynmaic button using image mapping?? to call SpouseAndDependentOverview)*@
                    <th>Family Overview</th>
                    <th>Employee ID</th>
                    <th>Employee Number</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Job Title</th>
                    <th>Mailing Address</th>
                    <th>City</th>
                    <th>State</th>
                    <th>ZipCode</th>
                </tr>
                <tr>
                    <td>
                        <a href="#" onclick="return FamilyMemberOverview()" class="next round"></a>   @* Dynamic button (image mapping??) to redirect to spouse and dependent overview *@
                    </td>
                    <td>
                        <div>
                            <input id="Employee_id" />
                            @Html.Raw(Model.Employee_id)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="EmpNumber" />
                            @Html.Raw(Model.SSN)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="EmpFirstName" />
                            @Html.Raw(Model.FirstName)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="EmpLastName" />
                            @Html.Raw(Model.LastName)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="JobTitle" />
                            @Html.Raw(Model.JobTitle)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="MailingAddress" />
                            @Html.Raw(Model.MailingAddress)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="City" />
                            @Html.Raw(Model.City)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="State" />
                            @Html.Raw(Model.State)
                        </div>
                    </td>
                    <td>
                        <div>
                            <input id="ZipCode" />
                            @Html.Raw(Model.ZipCode)
                        </div>
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditEmp", "Home"@*,null, new { e_id = Model.Employee_id }*@) |
                        @Html.ActionLink("Detail", "EmpDetail", new { controller = "Employee" }, new { e_id = Model.Employee_id }) |
                        @Html.ActionLink("Insurance", "EmpInsurance", new { controller = "Employee" }, new { e_id = Model.Employee_id }) |
                        @* create a link to show employee insurance overview for group health and life insurance *@
                    </td>
                </tr>
            </table>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" id="EnrollmentSelection" onclick="return EnrollmentSelection()" value="Enrollment Selection" class="btn" />
            </div>
        </div>
    </div>
</body>
</html>

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2
    }

    btn, a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        btn, a:hover {
            background-color: #555;
            color: black;
        }

    .next {
        background-color: #f2f2f2;
        color: white;
    }
</style>

<script>
    function EnrollmentSelection() {

        window.local.href = "/Employee/EnrollmentSelection";
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#EnrollmentSelection").addEventListener("click", function () {
            Employee_id = document.getElementById("Employee_id").value;
            EmpNumber = document.getElementById("EmpNumber").value;
            EmpFirstName = document.getElementById("EmpFirstName").value;
            EmpLastName = document.getElementById("EmpLastName").value;
            JobtTitle = document.getElementById("JobTitle").value;
            MailingAddress = document.getElementById("MailingAddress").value;
            City = document.getElementById("City").value;
            State = document.getElementById("State").value;
            ZipCode = document.getElementById("ZipCode").value;

            });

            var data = {

                "Employee_id": Employee_id,
                "EmpNumber": EmpNumber,
                "EmpFirstName": EmpFirstName,
                "EmpLastName": EmpLastName,
                "JobTitle": JobTitle,
                "MailingAddress": MailingAddress,
                "City": City,
                "State": State,
                "ZipCode": ZipCode,
            }

            var ret = postData('GetEmployee', data)
                .then(data => SecondStep(data.data))
                .catch(error => console.error(error))
    })

    function SecondStep(id) {
        document.querySelector("#Employee_id").value = id;
        document.querySelector("#divEmpOverview").content.style.display;
        document.querySelector("#EnrollmentSelection").content.style.display;
        document.querySelector("#EmpNumber").value = id;
        document.querySelector("#EmpFirstName").value = id;
        document.querySelector("#EmpLastName").value = id;
        document.querySelector("#JobTitle").value = id;
        document.querySelector("#MailingAddress").value = id;
        document.querySelector("#City").value = id;
        document.querySelector("#State").value = id;
        document.querySelector("#ZipCode").value = id;
    }

    //function postData(url, data) {
    //    //Default options are marked with *
    //    return fetch(url, {
    //        body: JSON.stringify(data), //must match 'Content-Type' header
    //        cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
    //        credentials: 'same-origin', //include, same-origin, *omit
    //        headers: {
    //            'user-agent': 'Mozilla/4.0 MDN Example',
    //            'content-type': 'application/json'
    //        },
    //        method: 'Post', //*GET, POST, PUT, DELETE, etc...
    //        mode: 'cors', //no-cors, cors, *same-origin
    //        redirect: 'follow', //manual, *follow, error
    //        referrer: 'no-referrer', //*client, no-referrer
    //    })
    //        .then(Response => Response.json()) //parses response to JSON
    //}

</script>


