@model Watson.ViewModels.EmployeeAndInsuranceVM

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Authorization Form</title>
</head>
<body>
    @* Authorization Form *@
    <div class="form-horizontal">
        <hr />
        <input type="hidden" id="Employee_id" class="form-control" name="Employee_id" value="@ViewBag.Employee_id" />
        <input type="hidden" id="GroupHealthInsurance_id" class="form-control" name="GroupHealthInsurance_id" value="@ViewBag.GroupHealthInsurance_id" />
        <div class="collapsible" id="FirstStep">Authorization Form</div>
        <div class="table table-bordered">
            <table class="table table-condensed" id="AuthorizationFormTable">
                <tr>
                    <td>
                        <div id="label">
                            1.<label class="" style="padding-left: 10px;">Policyholder's First Name:</label>
                            <input type="text" class="form-control" id="FirstName" placeholder="First Name" name="FirstName" value="@Html.DisplayFor(Model => Model.employee.FirstName)" disabled />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="label">
                            2.<label class="" style="padding-left: 10px;">Policyholder's Last Name:</label>
                            <input type="text" class="form-control" id="LastName" placeholder="Last Name" name="LastName" value="@Html.DisplayFor(Model => Model.employee.LastName)" disabled />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="label">
                            3.<label class="" style="padding-left: 10px;">Policyholder's Employers Name:</label>
                            <input type="text" class="form-control" id="Employer" placeholder="Employer" name="CurrentEmployer" value="@Html.DisplayFor(Model => Model.employee.CurrentEmployer)" disabled />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="label">
                            4.<label class="" style="padding-left: 10px;">Policyholder's SSN:</label>
                            <input type="text" class="form-control" id="SSN" placeholder="SSN#" name="SSN" value="@Html.DisplayFor(Model => Model.employee.SSN)" disabled />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="label">
                            5.<label class="" style="padding-left: 10px;">Policyholder's Date of Birth:</label>
                            <input type="date" class="form-control" id="DateOfBirth" name="DateOfBirth" value="@Convert.ToDateTime(Model.employee.DateOfBirth).ToString("yyyy-MM-dd")" disabled />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="label">
                            6.<label class="" style="padding-left: 10px;">Policyholder's Mailing Address:</label>
                            <input type="text" class="form-control" id="MailingAddress" placeholder="Street" name="MailingAddress" value="@Html.DisplayFor(Model => Model.employee.MailingAddress)" disabled />
                            <input type="text" class="form-control" id="PObox" placeholder="PO Box" name="PObox" value="@Html.DisplayFor(Model => Model.employee.PObox)" disabled />
                            <input type="text" class="form-control" id="City" placeholder="City" name="City" value="@Html.DisplayFor(Model => Model.employee.City)" disabled />
                            <input type="text" class="form-control" id="State" placeholder="State" name="State" value="@Html.DisplayFor(Model => Model.employee.State)" disabled />
                            <input type="text" class="form-control" id="ZipCode" placeholder="ZipCode" name="ZipCode" value="@Html.DisplayFor(Model => Model.employee.ZipCode)" disabled />
                        </div>
                    </td>
                </tr>
            </table>
            <hr />
            <div>
                <div id="label">
                    7.<label class="" style="padding-left: 10px;">Full Name of person(s) to release Information to:</label>
                    <p></p>
                    <label style="padding-left: 10px;">
                        Name:
                    </label>
                    <input type="text" id="NameOfPersonOne" name="PersonOneReleaseInfoTo" value="" />
                    <label style="padding-left: 10px;">
                        Relationship:
                    </label>
                    <input type="text" id="PersonOneRelationship" name="PersonOneRelationship" value="" />
                    <hr />
                    <label style="padding-left: 10px;">
                        Name:
                    </label>
                    <input type="text" id="NameOfPersonTwo" name="PersonTwoReleaseInfoTo" value="" />
                    <label style="padding-left: 10px;">
                        Relationship:
                    </label>
                    <input type="text" id="PersonTwoRelationship" name="PersonTwoRelationship" value="" />
                </div>
            </div>
            <hr />
            <div class="col-md-12 table table-bordered">
                <p></p>
                I AUTHORIZE Insurance Management Services to release any and all necessary Protected Health Information (PHI) to
                the above listed person(s).
                <p></p>
                A copy of this authorization remains valid for the term of coverage, unless specified in a written request. I have
                the right to receive a copy of the authorization upon request.<br />
                <p></p>
                *The policyholder must fill out this form in order to authorize another individual, other than themselves, to discuss
                claims, EOBs, or any other Protected Health Information (PHI) concerning the policyholder and/or dependent(s) on this
                plan, with this office. This individual may be a spouse, parent, friend, etc.*<br />
                <p></p>
                *Without a signed Authorization form, the policyholder will be the only individual that this office will release information
                to regarding the policy or the individual(s) on the policy.<br />
                <p></p>
            </div>
            <table class="table-bordered" id="AuthorizedSignatures" cellpadding="20" cellspacing="20">
                <tr>
                    <td>
                        <div class="text-justify">
                            <hr />
                            <label style="padding-left: 10px;">
                                Policyholder's Signature:
                            </label>
                            <input type="text" id="PolicyHolderSignature" name="PolicyHolderSignature" value="" />
                            <label style="padding-left: 10px;">
                                Date:
                            </label>
                            <input type="date" id="PolicyHolderSignatureDate" name="PolicyHolderSignatureDate" value="" />
                            <hr />
                            <label style="padding-left: 10px;">
                                Signature of person to release information to:
                            </label>
                            <input type="text" id="PersonOneSignature" name="PersonOneSignature" value="" />
                            <label style="padding-left: 10px;">
                                Date:
                            </label>
                            <input type="date" id="PersonOneSignatureDate" name="PersonOneSignatureDate" value="" />
                            <hr />
                            <label style="padding-left: 10px;">
                                Signature of person to release information to:
                            </label>
                            <input type="text" id="PersonTwoSignature" name="PersonTwoSignature" value="" />
                            <label style="padding-left: 10px;">
                                Date:
                            </label>
                            <input type="date" id="PersonTwoSignatureDate" name="PersonTwoSignatureDate" value="" />
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-offset-11">
                                <button id="AuthorizationFormUpdate" class="btn">Save</button>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    @*<p>
        @Html.ActionLink("Edit Authorization Form", "EditAuthorizationForm", new { Employee_id = ViewBag.Employee_id }, null)
    </p>*@
</body>
</html>


<style>
    .collapsible {
        background-color: #333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .btn {
        background-color: #333;
        color: white;
    }

    .button {
        text-align: right;
    }

    a {
        text-decoration: none;
        display: inline-block;
        padding: 8px 16px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }

    p {
        padding-left: 10px;
        padding-right: 10px;
    }

    #label {
        font-weight: bold;
        text-align: left;
        font-size: 100%;
    }

    #EmpSignature,
    #NameOfPerson1,
    #NameOfPerson2,
    #NameOfPerson1Signature,
    #NameOfPerson2Signature {
        width: 100%;
        border: 0px;
        border-bottom: 1px solid black;
        height: 30px;
    }

    #EmpSignatureDate,
    #NameOfPerson1SignatureDate,
    #NameOfPerson2SignatureDate {
        width: 15%;
        border: 0px;
        border-bottom: 1px solid black;
        height: 30px;
    }

    #NameOfPersonRelationship1, #NameOfPersonRelationship2 {
        width: 15%;
        border: 0px;
        border-bottom: 1px solid black;
        height: 30px;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    /*table tr {
            border-bottom: 1px solid black;
        }*/

    td:empty {
        width: 10px;
    }

    th, td {
        text-align: left;
        padding: 0px;
    }

    th {
        border-bottom: 5px solid black;
    }

    tr:nth-child(even) {
        /*background-color: #f2f2f2;*/
    }
</style>

<script>
    var col = document.querySelectorAll(".collapsible");
    var i;
    var Employee_id;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }

        });
    }

    //replace NameOfPersonToReleaseInfoTo, Relationship, OtherSignaute form d
    //with NameOfPersonOne-ReleaseInfoTo, NameOfPersonOne-Signature, NameOfPersonOne-SignatureDate
    //add policyholder signature and policyholder signatureDate to db
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("#AuthorizationFormUpdate").addEventListener("click", function () {
            Employee_id = document.getElementById("Employee_id").value;
            GroupHealthInsurance_id = document.getElementById("GroupHealthInsurance_id").value;
            PersonOneReleaseInfoTo = document.getElementById("PersonOneReleaseInfoTo").value;
            PersonOneRelationship = document.getElementById("PersonOneRelationship").value;
            PersonTwoReleaseInfoTo = document.getElementById("PersonTwoReleaseInfoTo").value;
            PersonTwoRelationship = document.getElementById("PersonTwoRelationship").value;
            PolicyHolderSignature = document.getElementById("PolicyHolderSignature").value;
            PolicyHolderSignatureDate = document.getElementById("PolicyHolderSignatureDate").value;
            PersonOneSignature = document.getElementById("PersonOneSignature").value;
            PersonOneSignatureDate = document.getElementById("PersonOneSignatureDate").value;
            PersonTwoSignature = document.getElementById("PersonTwoSignature").value;
            PersonTwoSignatureDate = document.getElementById("PersonTwoSignatureDate").value;

            var data = {
                "Employee_id": Employee_id,
                "GroupHealthInsurance_id": GroupHealthInsurance_id,
                "PersonOneReleaseInfoTo": PersonOneReleaseInfoTo,
                "PersonOneRelationship": PersonOneRelationship,
                "PersonTwoReleaseInfoTo": PersonTwoReleaseInfoTo,
                "PersonTwoRelationship": PersonTwoRelationship,
                "PolicyHolderSignature": PolicyHolderSignature,
                "PolicyHolderSignatureDate": PolicyHolderSignatureDate,
                "PersonOneSignature": PersonOneSignature,
                "PersonOneSignatureDate": PersonOneSignatureDate,
                "PersonTwoSignature": PersonTwoSignature,
                "PersonTwoSignatureDate": PersonTwoSignatureDate,
            }

            //var ret = postData('AuthorizationFormNew', data)
            //    .then(data => {
            //        console.log(data);
            //        FirstStep(data);
            //    })
            //    .catch(error => console.error(error))

            fetch('AuthorizationFormNew', {
                body: JSON.stringify(data), //must match 'Content-Type' header
                cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', //include, same-origin, *omit
                headers: {
                    'Accept': 'application/json',
                    'user-agent': 'Mozilla/4.0 MDN Example',
                    'content-type': 'application/json'
                },
                method: 'Post', //*GET, POST, PUT, DELETE, etc...
                mode: 'same-origin', //no-cors, cors, *same-origin
                redirect: 'follow', //manual, *follow, error
                referrer: 'no-referrer', //*client, no-referrer
            }).then(res => res.json())
                .then(response => FirstStep(response))
                .catch(error => console.error('Error:', error));

        })

        function FirstStep(emp) {
            document.querySelector("#FirstStep").nextElementSibling.style.display = "none";
            Employee_id = emp.data;

        }


        function postData(url, data) {
            //Default options are marked with *
            console.log(data);
            console.log(JSON.stringify(data));
            return fetch(url, {
                body: JSON.stringify(data), //must match 'Content-Type' header
                cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', //include, same-origin, *omit
                headers: {
                    'Accept': 'application/json',
                    'user-agent': 'Mozilla/4.0 MDN Example',
                    'content-type': 'application/json'
                },
                method: 'Post', //*GET, POST, PUT, DELETE, etc...
                mode: 'same-origin', //no-cors, cors, *same-origin
                redirect: 'follow', //manual, *follow, error
                referrer: 'no-referrer', //*client, no-referrer
            }).then(res => res.json())
                .then(response => console.log('Success:', JSON.stringify(response)))
                .catch(error => console.error('Error:', error));
            //.then(Response => {
            //    console.log(Response);
            //    Response.json();
            //}) //parses response to JSON
        }
    })
</script>



