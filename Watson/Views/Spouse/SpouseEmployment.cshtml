@model Watson.Models.Family_Info


@{
    @ViewBag.Title = "SpouseEmployment";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Spouse Employment</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.FamilyMember_id, new { fm_id = Model.FamilyMember_id })
        @Html.HiddenFor(model => model.Employee_id, new { e_id = Model.Employee_id })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            <hr />
            <h4>Spouse Employment</h4>
            <div class="content">
                <form action="SpouseEmployment()" method="post">
                    <div id="divSpouseEmployment">
                        <div class="form-group">
                            <label for="Employer" class="col-md-2 control-label">Current Employer:</label>
                            <div class="col-md-10">
                                <input type="text" id="Employer" class="form-control" name="Employer" value="" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EmployerAddress" class="col-md-2 control-label">Employer Address:</label>
                            <div class="col-md-10">
                                <input type="text" id="EmployerAddress" class="form-control" name="EmployerAddress" value="" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EmployerCity" class="col-md-2 control-label">City:</label>
                            <div class="col-md-10">
                                <input type="text" id="EmployerCity" class="form-control" name="EmployerCity" value="" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EmployerState" class="col-md-2 control-label">State:</label>
                            <div class="col-md-10">
                                <input type="text" id="EmployerState" class="form-control" name="EmployerState" value="" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EmployerZipCode" class="col-md-2 control-label">Zip Code:</label>
                            <div class="col-md-10">
                                <input type="text" id="EmployerZipCode" class="form-control" name="EmployerZipCode" value="" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="EmployerPhoneNumber" class="col-md-2 control-label">Phone Number:</label>
                            <div class="col-md-10">
                                <input type="text" id="EmployerPhoneNumber" class="form-control" name="EmployerPhoneNumber" value="" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="Submit" type="submit" value="Save" onclick="SpouseEmploymentUpdate()" class="btn btn-primary" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    }

    <div>
        <button onclick="SpouseContact()" value="Previous" class="btn btn-secondary" /> |
        <button onclick="FamilyMemberOverview()" value="Finished" class="btn btn-secondary" />
    </div>
    <p>
        @Html.ActionLink("Back to Family Overview", "FamilyMemberOverview")
    </p>
</body>
</html>

<script>
    function GetSpouseEmployment() {

        Employer = document.getElementById("Employer").value;
        EmployerAddress = document.getElementById("EmployerAddress").value;
        EmployerCity = document.getElementById("EmployerCity").value;
        EmployerState = document.getElementById("EmployerState").value;
        EmployerZipCode = document.getElementById("EmployerZipCode").value;
        EmployerPhoneNumber = document.getElementById("EmployerPhoneNumber").value;

        var data = {

            "fm_id": fm_id,
            "e_id": e_id,
            "Employer": Employer,
            "EmployerAddress": EmployerAddress,
            "EmployerCity": EmployerCity,
            "EmployerState": EmployerState,
            "EmployerZipCode": EmployerZipCode,
            "EmployerPhoneNumber": EmployerPhoneNumber,

        }

        var ret = postData('/Family_Info/SpouseEmployment', data)
            .then(data => SpouseEmploymentUpdate(data))
            .catch(error => error.console(error))

        ret();

    }

    function postData(url, data) {
        return fetch(url, {
            body: JSON.stringify(data),
            cache: 'no-cache',
            credentials: 'same-origin',
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer

        })
    }
</script>

<script>
    document.addEventListener("DOMContentloaded", function () {

        var col = document.querySelectorAll(".collapsible");

        for (var i = 0; i < col.length; i++) {
            col[i].addEventListener("click", function () {
                this.classList.toggle("active");

                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                }
                else {
                    content.style.display = "block";
                }

            });
        }
    })
</script>


<style>
    .collapsible {
        background-color: #333333;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }
</style>