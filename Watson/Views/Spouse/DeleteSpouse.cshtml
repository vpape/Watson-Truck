@model Watson.Models.Family_Info

@{
    ViewBag.Title = "DeleteSpouse";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.FamilyMember_id, new { fm_id = Model.FamilyMember_id })
        @Html.HiddenFor(model => model.Employee_id, new { e_id = Model.Employee_id })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">
            <h2></h2>
            <hr />
            <button class="collapsible"><h4>Delete Spouse Information</h4></button>
            <div class="content">
                <form action=DeleteSpouse() method="post">
                    <div id="divSpouseInfo">
                        <h4>Spouse Info:</h4>
                        <dl class="dl-horizontal">
                            <dt>
                                <label class="col-md-offset-2 control-label">Relationship to Employee:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.RelationshipToInsured)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Employee Number:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Employee.SSN)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Employee First Name:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Employee.FirstName)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Employee Last Name:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Employee.LastName)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">First Name:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.FirstName)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Last Name:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.LastName)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Date of Birth:</label>
                            </dt>

                            <dd>
                                @Convert.ToDateTime(Model.DateOfBirth).ToString("MM/dd/yyyy")
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Gender:</label>
                            </dt>

                            <dd>
                                <label class="radio-inline"><input disabled type="radio" id="Male" class="radio-inline" name="Gender" value="Male" @((Model.Gender == "Male") ? "checked" : "") />Male</label>
                                <label class="radio-inline"><input disabled type="radio" id="Female" class="radio-inline" name="Gender" value="Female" @((Model.Gender == "Female") ? "checked" : "") />Female</label>
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Mailing Address:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.MailingAddress)

                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Physical Address:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.PhysicalAddress)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">City:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.City)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">State:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.State)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Zip Code:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.ZipCode)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">County:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.County)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Email Address:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.EmailAddress)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Phone Number:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.PhoneNumber)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Cell Phone:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.CellPhone)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Employer:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Employer)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Employer Address:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.EmployerMailingAddress)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">City:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.EmployerCity)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">State:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.EmployerState)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Zip Code:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.EmployerZipCode)
                            </dd>

                            <dt>
                                <label class="col-md-offset-2 control-label">Phone Number:</label>
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.EmployerPhoneNumber)
                            </dd>
                        </dl>
                    </div>
                </form>
            </div>
        </div>
        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to Family Overview", "FamilyMemberOverview")
        </div>
    }

</body>

<script>
    @*function GetSpouse() {

        fm_id = document.getElementById("fm_id").value
        e_id = document.getElementById("e_id").value

        RelationshipToInsured = document.getElementsByName("RelationshipToInsured").value;
        EmployeeNumber = document.getElementById("SSN").value;
        EmployeeFName = document.getElementById("EmployeeFName").value;
        EmployeeLName = document.getElementById("EmployeeLName").value;

        FirstName = document.getElementById("FirstName").value;
        LastName = document.getElementById("LastName").value;
        DateOfBirth = document.getElementById("DateOfBirth").value;
        Gender = document.getElementsByName("Gender").value;

        MailingAddress = document.getElementsByName("MailingAddress").value;
        PhyscialAddress = document.getElementsByName("PhyscialAddress").value;
        City = document.getElementById("City").value;
        State = document.getElementById("State").value;
        ZipCode = document.getElementById("ZipCode").value;
        County = document.getElementById("County").value;
        EmailAddress = document.getElementById("EmailAddress").value;
        PhoneNumber = document.getElementById("PhoneNumber").value;
        CellPhone = document.getElementById("CellPhone").value;

        Employer = document.getElementById("Employer").value;
        EmployerMailingAddress = document.getElementById("EmployerMailingAddress").value;
        EmployerCity = document.getElementById("EmployerCity").value;
        EmployerState = document.getElementById("EmployerState").value;
        EmployerZipCode = document.getElementById("EmployerZipCode").value;
        EmployerPhoneNumber = document.getElementById("EmployerPhoneNumber");

        postData('/Family_Info/DeleteSpouse', {
            RelationshipToInsured: RelationshipToInsured, EmployeeNumber: EmployeeNumber, EmployeeFName: EmployeeFName, EmployeeLName: EmployeeLName,
            FirstName: FirstName, LastName: LastName, DateOfBirth: DateOfBirth, Gender: Gender, MailingAddress: MailingAddress,
            PhyscialAddress: PhyscialAddress, City: City, State: State, ZipCode: ZipCode, County: County, EmailAddress: EmailAddress,
            PhoneNumber: PhoneNumber, CellPhone: CellPhone, Employer: Employer, EmployerMailingAddress: EmployerMailingAddress,
            EmployerCity: EmployerCity, EmployerState: EmployerState, EmployerZipCode: EmployerZipCode, EmployerPhoneNumber: EmployerPhoneNumber
        })
            .then(data => DeleteSpouse(data))
            .catch(error => console.error(error))
    }

    function postData(url, data) {
        //Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Post', //*GET, POST, PUT, DELETE, etc...
            mode: 'cors', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        })
            .then(response => response.JSON()) //parses response to JSON
    }*@

</script>

